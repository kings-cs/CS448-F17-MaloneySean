package edu.kings.cs448.fall2017.MaloneySean.localsearch;

/**
 * Solves a problem really unintelligently.
 * @author Sean Maloney
 *
 * @param <S> The kinds of states being used.
 */
public class BogoSearch<S> {
	
	/**
	 * The number of states generated before a solution was found.
	 */
	private int statesGenerated;
	
	/**
	 * Solves a problem, stupidly.
	 * @param problem The problem to be solved.
	 * @return The result state.
	 */
	public S solve(LocalSearchProblem<S> problem) {
		S current = problem.getRandomState();
		statesGenerated = 0;
		
		boolean isRunning = true;
		
		while(isRunning) {
			int currentFitness = problem.getFitness(current);
			
			if(currentFitness == problem.getMaximumFitness()) {
				isRunning = false;
			}
			else {
				current = problem.getRandomState();
				statesGenerated++;
			}
		}
		
		return current;
	}

	/**
	 * Gets the amount of states generated.
	 * @return The number of states generated by the most recent call to solve.
	 */
	public int getStatesGenerated() {
		return statesGenerated;
	}
}
